{"version":3,"sources":["Components/ContactListItem/ContactListItem.module.scss","Components/ContactListItem/ContactListItem.js","Components/SaveDellCont/SaveDellCont.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactListItem","el","delCont","className","styles","listItem","name","number","btn","onClick","id","SaveDellCont","contacts","map","contact","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","type","onChange","required","margin","pattern","title","Component","propType","PropTypes","func","isRequired","ContactList","deleteContact","Filter","handleChangeFilter","filter","App","historyDelCont","addContact","find","alert","uuidv4","prevState","event","filteredContact","toLowerCase","includes","addToLocalDel","contactId","obj","localS","JSON","parse","window","localStorage","getItem","push","setItem","stringify","console","log","parsedContacts","length","root","document","querySelector","ReactDOM","render","StrictMode"],"mappings":"sJACAA,EAAOC,QAAU,CAAC,SAAW,kCAAkC,IAAM,6BAA6B,OAAS,kC,4KC6B5FC,EA1BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAAP,OACtB,qBAAIC,UAAWC,IAAOC,SAAtB,UACGJ,EAAGK,KADN,KACcL,EAAGM,OACdL,GACC,wBACEC,UAAWC,IAAOI,IAClBC,QAAS,WACPP,EAAQD,EAAGS,KAHf,wBCISC,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnB,qCACE,8CACA,6BACGA,EAASC,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,CAAkCb,GAAIa,GAAhBA,EAAQJ,a,yBCHhCK,E,4MACJC,MAAQ,CACNV,KAAM,GACNC,OAAQ,I,EAMVU,aAAe,SAAAC,GACb,MAAwBA,EAAEC,OAAlBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBf,EAAOc,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,EAAKC,MAAMC,aAAa,EAAKT,MAAMV,KAAM,EAAKU,MAAMT,QAEpD,EAAKc,SAAS,CACZf,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,MAAyBmB,KAAKV,MAAtBV,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,uBAAMoB,SAAUD,KAAKJ,aAArB,UACE,yCAEE,uBACA,uBACEM,KAAK,OACLR,MAAOd,EACPA,KAAK,OACLuB,SAAUH,KAAKT,aACfa,UAAQ,OAGZ,uBACA,2CAEE,uBACA,uBACE3B,UAAWC,IAAO2B,OAClBX,MAAOb,EACPqB,KAAK,MACLtB,KAAK,SACL0B,QAAQ,yFACRC,MAAM,+FACNH,UAAQ,EACRD,SAAUH,KAAKT,kBAGnB,uBACA,wBAAQd,UAAWC,IAAOI,IAAKoB,KAAK,SAApC,gC,GA1DkBM,aAApBnB,EAKGoB,SAAW,CAChBV,aAAcW,IAAUC,KAAKC,YA4DlBvB,QCpDAwB,EAdK,SAAC,GAAD,IAAG3B,EAAH,EAAGA,SAAU4B,EAAb,EAAaA,cAAb,OAClB,kCACE,6BACG5B,EAASC,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,CAEEb,GAAIa,EACJZ,QAASsC,GAFJ1B,EAAQJ,YCUR+B,EAhBF,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,mBAAoBC,EAAa,EAAbA,OAClC,OACE,kCACE,0DAEE,uBACEd,SAAUa,EACVtB,MAAOuB,EACPrC,KAAK,SACLsB,KAAK,e,QCHTgB,E,4MACJ5B,MAAQ,CACNJ,SAAU,GACVQ,MAAO,EACPuB,OAAQ,GACRE,eAAgB,I,EAgBlBC,WAAa,SAACxC,EAAMC,GAClB,GAAI,EAAKS,MAAMJ,SAASmC,MAAK,SAAAjC,GAAO,OAAIR,IAASQ,EAAQR,QACvD0C,MAAM1C,EAAO,+BADf,CAKA,IAAMQ,EAAU,CACdJ,GAAIuC,cACJ3C,OACAC,UAGF,EAAKc,UAAS,SAAA6B,GACZ,MAAO,CACLtC,SAAS,GAAD,mBAAMsC,EAAUtC,UAAhB,CAA0BE,U,EAKxC4B,mBAAqB,SAAAS,GACnB,EAAK9B,SAAS,CAAEsB,OAAQQ,EAAMhC,OAAOC,S,EAGvCgC,gBAAkB,WAChB,MAA6B,EAAKpC,MAA1BJ,EAAR,EAAQA,SAAU+B,EAAlB,EAAkBA,OAClB,OAAO/B,EAAS+B,QAAO,SAAA/B,GAAQ,OAC7BA,EAASN,KAAK+C,cAAcC,SAASX,EAAOU,mB,EAGhDE,cAAgB,SAAAC,GAAc,IAAD,gBACT,EAAKxC,MAAMJ,UADF,IAC3B,2BAAuC,CAAC,IAA7B6C,EAA4B,QACrC,GAAIA,EAAI/C,KAAO8C,EAAW,CACxB,IAAME,EAASC,KAAKC,MAClBC,OAAOC,aAAaC,QAAQ,mBAG9B,GAAIL,EAMF,OALAA,EAAOM,KAAKP,GACZI,OAAOC,aAAaG,QAAQ,iBAAkBN,KAAKO,UAAUR,IAC7DS,QAAQC,IAAIV,QACZ,EAAKrC,SAAS,CAAEwB,eAAgBa,IAI7BA,IACH,EAAKrC,SAAS,CAAEwB,eAAgB,CAACY,KACjCI,OAAOC,aAAaG,QAAQ,iBAAkBN,KAAKO,UAAU,CAACT,QAjBzC,gC,EAsB7BjB,cAAgB,SAAAgB,GACd,EAAKD,cAAcC,GAEnB,EAAKnC,UAAS,WACZ,MAAO,CACLT,SAAU,EAAKI,MAAMJ,SAAS+B,QAC5B,SAAA7B,GAAO,OAAIA,EAAQJ,KAAO8C,U,uDAvElC,WACE,IAAMa,EAAiBV,KAAKC,MAAME,aAAaC,QAAQ,aACjDL,EAASC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,mBAClDL,GACFhC,KAAKL,SAAS,CAAEwB,eAAgBa,IAElCW,GAAkB3C,KAAKL,SAAS,CAAET,SAAUyD,M,gCAG9C,SAAmBnB,GACjBxB,KAAKV,MAAMJ,WAAasC,EAAUtC,UAChCkD,aAAaG,QAAQ,WAAYN,KAAKO,UAAUxC,KAAKV,MAAMJ,a,oBAkE/D,WAEE,OACE,gCACE,2CACA,cAAC,EAAD,CAAaa,aAAcC,KAAKoB,aAEhC,0CACCpB,KAAKV,MAAMJ,SAAS0D,OAAS,GAC5B,cAAC,EAAD,CACE5B,mBAAoBhB,KAAKgB,mBACzBC,OAAQjB,KAAKV,MAAM2B,SAIvB,cAAC,EAAD,CACE/B,SAAUc,KAAK0B,kBACfZ,cAAed,KAAKc,gBAErBd,KAAKV,MAAM6B,gBACV,cAAC,EAAD,CAAcjC,SAAUc,KAAKV,MAAM6B,wB,GAxG3BX,aA+GHU,ICnHT2B,G,YAAOC,SAASC,cAAc,UAEpCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,K","file":"static/js/main.da5e1995.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3qrCJ\",\"btn\":\"ContactListItem_btn__2g7fw\",\"margin\":\"ContactListItem_margin__2A_S_\"};","import React from 'react';\nimport styles from './ContactListItem.module.scss';\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ el, delCont }) => (\n  <li className={styles.listItem}>\n    {el.name}: {el.number}\n    {delCont && (\n      <button\n        className={styles.btn}\n        onClick={() => {\n          delCont(el.id);\n        }}\n      >\n        Delete\n      </button>\n    )}\n  </li>\n);\n\nContactListItem.propTypes = {\n  el: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n\n  delCont: PropTypes.func,\n};\n\nexport default ContactListItem;\n","/* historyDelCont; */\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nconst SaveDellCont = ({ contacts }) => (\r\n  <>\r\n    <h2>Dell Contact</h2>\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <ContactListItem key={contact.id} el={contact} />\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\nexport default SaveDellCont;\r\n","import React, { Component } from 'react';\nimport styles from '../ContactListItem/ContactListItem.module.scss';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  static propType = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onAddContact(this.state.name, this.state.number);\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <br />\n          <input\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <br />\n        <label>\n          Number\n          <br />\n          <input\n            className={styles.margin}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <br />\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, deleteContact }) => (\n  <section>\n    <ul>\n      {contacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          el={contact}\n          delCont={deleteContact}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nlet Filter = ({ handleChangeFilter, filter }) => {\n  return (\n    <section>\n      <label>\n        Find contacts by name\n        <input\n          onChange={handleChangeFilter}\n          value={filter}\n          name=\"filter\"\n          type=\"text\"\n        />\n      </label>\n    </section>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  handleChangeFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport SaveDellCont from './Components/SaveDellCont/SaveDellCont';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    value: 0,\n    filter: '',\n    historyDelCont: '',\n  };\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    const localS = JSON.parse(window.localStorage.getItem('historyDelCont'));\n    if (localS) {\n      this.setState({ historyDelCont: localS });\n    }\n    parsedContacts && this.setState({ contacts: parsedContacts });\n  }\n\n  componentDidUpdate(prevState) {\n    this.state.contacts !== prevState.contacts &&\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  addContact = (name, number) => {\n    if (this.state.contacts.find(contact => name === contact.name)) {\n      alert(name + ' is already in contacts');\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  handleChangeFilter = event => {\n    this.setState({ filter: event.target.value });\n  };\n\n  filteredContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n  addToLocalDel = contactId => {\n    for (const obj of this.state.contacts) {\n      if (obj.id === contactId) {\n        const localS = JSON.parse(\n          window.localStorage.getItem('historyDelCont'),\n        );\n\n        if (localS) {\n          localS.push(obj);\n          window.localStorage.setItem('historyDelCont', JSON.stringify(localS));\n          console.log(localS);\n          this.setState({ historyDelCont: localS });\n\n          return;\n        }\n        if (!localS) {\n          this.setState({ historyDelCont: [obj] });\n          window.localStorage.setItem('historyDelCont', JSON.stringify([obj]));\n        }\n      }\n    }\n  };\n  deleteContact = contactId => {\n    this.addToLocalDel(contactId);\n\n    this.setState(() => {\n      return {\n        contacts: this.state.contacts.filter(\n          contact => contact.id !== contactId,\n        ),\n      };\n    });\n  };\n\n  render() {\n    /*  const {historyDelCont, contact} = this.state */\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        {this.state.contacts.length > 1 && (\n          <Filter\n            handleChangeFilter={this.handleChangeFilter}\n            filter={this.state.filter}\n          />\n        )}\n\n        <ContactList\n          contacts={this.filteredContact()}\n          deleteContact={this.deleteContact}\n        />\n        {this.state.historyDelCont && (\n          <SaveDellCont contacts={this.state.historyDelCont} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport react from 'react';\nimport 'modern-normalize/modern-normalize.css';\nimport 'index.css';\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <react.StrictMode>\n    <App />\n  </react.StrictMode>,\n  root,\n);\n"],"sourceRoot":""}